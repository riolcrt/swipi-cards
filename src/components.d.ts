/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  SwipiCard,
} from './components/swipi-card/swipi-card';

export namespace Components {
  interface RgSwipiCard {
    'leftColor': string;
    'rightColor': string;
  }
  interface RgSwipiCards {
    'cardStack': SwipiCard[];
  }
}

declare global {


  interface HTMLRgSwipiCardElement extends Components.RgSwipiCard, HTMLStencilElement {}
  var HTMLRgSwipiCardElement: {
    prototype: HTMLRgSwipiCardElement;
    new (): HTMLRgSwipiCardElement;
  };

  interface HTMLRgSwipiCardsElement extends Components.RgSwipiCards, HTMLStencilElement {}
  var HTMLRgSwipiCardsElement: {
    prototype: HTMLRgSwipiCardsElement;
    new (): HTMLRgSwipiCardsElement;
  };
  interface HTMLElementTagNameMap {
    'rg-swipi-card': HTMLRgSwipiCardElement;
    'rg-swipi-cards': HTMLRgSwipiCardsElement;
  }
}

declare namespace LocalJSX {
  interface RgSwipiCard {
    'leftColor'?: string;
    'onSwipeleft'?: (event: CustomEvent<any>) => void;
    'onSwiperight'?: (event: CustomEvent<any>) => void;
    'rightColor'?: string;
  }
  interface RgSwipiCards {
    'cardStack'?: SwipiCard[];
  }

  interface IntrinsicElements {
    'rg-swipi-card': RgSwipiCard;
    'rg-swipi-cards': RgSwipiCards;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'rg-swipi-card': LocalJSX.RgSwipiCard & JSXBase.HTMLAttributes<HTMLRgSwipiCardElement>;
      'rg-swipi-cards': LocalJSX.RgSwipiCards & JSXBase.HTMLAttributes<HTMLRgSwipiCardsElement>;
    }
  }
}


